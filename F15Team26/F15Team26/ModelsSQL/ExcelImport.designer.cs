#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace F15Team26.ModelsSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="F15Team26")]
	public partial class ExcelImportDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__MigrationHistory(__MigrationHistory instance);
    partial void Update__MigrationHistory(__MigrationHistory instance);
    partial void Delete__MigrationHistory(__MigrationHistory instance);
    partial void InsertSupplier(Supplier instance);
    partial void UpdateSupplier(Supplier instance);
    partial void DeleteSupplier(Supplier instance);
    partial void InsertAspNetRole(AspNetRole instance);
    partial void UpdateAspNetRole(AspNetRole instance);
    partial void DeleteAspNetRole(AspNetRole instance);
    partial void InsertAspNetUserClaim(AspNetUserClaim instance);
    partial void UpdateAspNetUserClaim(AspNetUserClaim instance);
    partial void DeleteAspNetUserClaim(AspNetUserClaim instance);
    partial void InsertAspNetUserLogin(AspNetUserLogin instance);
    partial void UpdateAspNetUserLogin(AspNetUserLogin instance);
    partial void DeleteAspNetUserLogin(AspNetUserLogin instance);
    partial void InsertAspNetUserRole(AspNetUserRole instance);
    partial void UpdateAspNetUserRole(AspNetUserRole instance);
    partial void DeleteAspNetUserRole(AspNetUserRole instance);
    partial void InsertAspNetUser(AspNetUser instance);
    partial void UpdateAspNetUser(AspNetUser instance);
    partial void DeleteAspNetUser(AspNetUser instance);
    partial void InsertBooks(Books instance);
    partial void UpdateBooks(Books instance);
    partial void DeleteBooks(Books instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertCustomers(Customers instance);
    partial void UpdateCustomers(Customers instance);
    partial void DeleteCustomers(Customers instance);
    partial void InsertEmployees(Employees instance);
    partial void UpdateEmployees(Employees instance);
    partial void DeleteEmployees(Employees instance);
    partial void InsertOrderDetail(OrderDetail instance);
    partial void UpdateOrderDetail(OrderDetail instance);
    partial void DeleteOrderDetail(OrderDetail instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertPromotion(Promotion instance);
    partial void UpdatePromotion(Promotion instance);
    partial void DeletePromotion(Promotion instance);
    partial void InsertShoppingCart(ShoppingCart instance);
    partial void UpdateShoppingCart(ShoppingCart instance);
    partial void DeleteShoppingCart(ShoppingCart instance);
    #endregion
		
		public ExcelImportDataContext() :
        base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MyDBConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExcelImportDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExcelImportDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExcelImportDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExcelImportDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__MigrationHistory> @__MigrationHistories
		{
			get
			{
				return this.GetTable<@__MigrationHistory>();
			}
		}
		
		public System.Data.Linq.Table<Supplier> Suppliers
		{
			get
			{
				return this.GetTable<Supplier>();
			}
		}
		
		public System.Data.Linq.Table<_Additional_Requirements__> _Additional_Requirements__s
		{
			get
			{
				return this.GetTable<_Additional_Requirements__>();
			}
		}
		
		public System.Data.Linq.Table<AspNetRole> AspNetRoles
		{
			get
			{
				return this.GetTable<AspNetRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this.GetTable<AspNetUserClaim>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this.GetTable<AspNetUserLogin>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this.GetTable<AspNetUserRole>();
			}
		}
		
		public System.Data.Linq.Table<AspNetUser> AspNetUsers
		{
			get
			{
				return this.GetTable<AspNetUser>();
			}
		}
		
		public System.Data.Linq.Table<Books> Books
		{
			get
			{
				return this.GetTable<Books>();
			}
		}
		
		public System.Data.Linq.Table<Books_> Books_s
		{
			get
			{
				return this.GetTable<Books_>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<Customers> Customers
		{
			get
			{
				return this.GetTable<Customers>();
			}
		}
		
		public System.Data.Linq.Table<Customers_> Customers_s
		{
			get
			{
				return this.GetTable<Customers_>();
			}
		}
		
		public System.Data.Linq.Table<Employees> Employees
		{
			get
			{
				return this.GetTable<Employees>();
			}
		}
		
		public System.Data.Linq.Table<Employees_> Employees_s
		{
			get
			{
				return this.GetTable<Employees_>();
			}
		}
		
		public System.Data.Linq.Table<OrderDetail> OrderDetails
		{
			get
			{
				return this.GetTable<OrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<Promotion> Promotions
		{
			get
			{
				return this.GetTable<Promotion>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingCart> ShoppingCarts
		{
			get
			{
				return this.GetTable<ShoppingCart>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[__MigrationHistory]")]
	public partial class @__MigrationHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MigrationId;
		
		private string _ContextKey;
		
		private System.Data.Linq.Binary _Model;
		
		private string _ProductVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMigrationIdChanging(string value);
    partial void OnMigrationIdChanged();
    partial void OnContextKeyChanging(string value);
    partial void OnContextKeyChanged();
    partial void OnModelChanging(System.Data.Linq.Binary value);
    partial void OnModelChanged();
    partial void OnProductVersionChanging(string value);
    partial void OnProductVersionChanged();
    #endregion
		
		public @__MigrationHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MigrationId", DbType="NVarChar(150) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MigrationId
		{
			get
			{
				return this._MigrationId;
			}
			set
			{
				if ((this._MigrationId != value))
				{
					this.OnMigrationIdChanging(value);
					this.SendPropertyChanging();
					this._MigrationId = value;
					this.SendPropertyChanged("MigrationId");
					this.OnMigrationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContextKey", DbType="NVarChar(300) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ContextKey
		{
			get
			{
				return this._ContextKey;
			}
			set
			{
				if ((this._ContextKey != value))
				{
					this.OnContextKeyChanging(value);
					this.SendPropertyChanging();
					this._ContextKey = value;
					this.SendPropertyChanged("ContextKey");
					this.OnContextKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductVersion", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string ProductVersion
		{
			get
			{
				return this._ProductVersion;
			}
			set
			{
				if ((this._ProductVersion != value))
				{
					this.OnProductVersionChanging(value);
					this.SendPropertyChanging();
					this._ProductVersion = value;
					this.SendPropertyChanged("ProductVersion");
					this.OnProductVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Suppliers")]
	public partial class Supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SuppliersID;
		
		private string _SupplierName;
		
		private int _OrderAmount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSuppliersIDChanging(int value);
    partial void OnSuppliersIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnOrderAmountChanging(int value);
    partial void OnOrderAmountChanged();
    #endregion
		
		public Supplier()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SuppliersID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SuppliersID
		{
			get
			{
				return this._SuppliersID;
			}
			set
			{
				if ((this._SuppliersID != value))
				{
					this.OnSuppliersIDChanging(value);
					this.SendPropertyChanging();
					this._SuppliersID = value;
					this.SendPropertyChanged("SuppliersID");
					this.OnSuppliersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderAmount", DbType="Int NOT NULL")]
		public int OrderAmount
		{
			get
			{
				return this._OrderAmount;
			}
			set
			{
				if ((this._OrderAmount != value))
				{
					this.OnOrderAmountChanging(value);
					this.SendPropertyChanging();
					this._OrderAmount = value;
					this.SendPropertyChanged("OrderAmount");
					this.OnOrderAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[\'Additional Requirements$\']")]
	public partial class _Additional_Requirements__
	{
		
		private string _Validations;
		
		private string _F2;
		
		private string _F3;
		
		private string _F4;
		
		private string _F5;
		
		private string _F6;
		
		public _Additional_Requirements__()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validations", DbType="NVarChar(255)")]
		public string Validations
		{
			get
			{
				return this._Validations;
			}
			set
			{
				if ((this._Validations != value))
				{
					this._Validations = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F2", DbType="NVarChar(255)")]
		public string F2
		{
			get
			{
				return this._F2;
			}
			set
			{
				if ((this._F2 != value))
				{
					this._F2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F3", DbType="NVarChar(255)")]
		public string F3
		{
			get
			{
				return this._F3;
			}
			set
			{
				if ((this._F3 != value))
				{
					this._F3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F4", DbType="NVarChar(255)")]
		public string F4
		{
			get
			{
				return this._F4;
			}
			set
			{
				if ((this._F4 != value))
				{
					this._F4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F5", DbType="NVarChar(255)")]
		public string F5
		{
			get
			{
				return this._F5;
			}
			set
			{
				if ((this._F5 != value))
				{
					this._F5 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F6", DbType="NVarChar(255)")]
		public string F6
		{
			get
			{
				return this._F6;
			}
			set
			{
				if ((this._F6 != value))
				{
					this._F6 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetRoles")]
	public partial class AspNetRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _Name;
		
		private string _Discriminator;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDiscriminatorChanging(string value);
    partial void OnDiscriminatorChanged();
    #endregion
		
		public AspNetRole()
		{
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discriminator", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Discriminator
		{
			get
			{
				return this._Discriminator;
			}
			set
			{
				if ((this._Discriminator != value))
				{
					this.OnDiscriminatorChanging(value);
					this.SendPropertyChanging();
					this._Discriminator = value;
					this.SendPropertyChanged("Discriminator");
					this.OnDiscriminatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="RoleId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserClaims")]
	public partial class AspNetUserClaim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _UserId;
		
		private string _ClaimType;
		
		private string _ClaimValue;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnClaimTypeChanging(string value);
    partial void OnClaimTypeChanged();
    partial void OnClaimValueChanging(string value);
    partial void OnClaimValueChanged();
    #endregion
		
		public AspNetUserClaim()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimType", DbType="NVarChar(MAX)")]
		public string ClaimType
		{
			get
			{
				return this._ClaimType;
			}
			set
			{
				if ((this._ClaimType != value))
				{
					this.OnClaimTypeChanging(value);
					this.SendPropertyChanging();
					this._ClaimType = value;
					this.SendPropertyChanged("ClaimType");
					this.OnClaimTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClaimValue", DbType="NVarChar(MAX)")]
		public string ClaimValue
		{
			get
			{
				return this._ClaimValue;
			}
			set
			{
				if ((this._ClaimValue != value))
				{
					this.OnClaimValueChanging(value);
					this.SendPropertyChanging();
					this._ClaimValue = value;
					this.SendPropertyChanged("ClaimValue");
					this.OnClaimValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserClaims.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserClaims.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserLogins")]
	public partial class AspNetUserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LoginProvider;
		
		private string _ProviderKey;
		
		private string _UserId;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginProviderChanging(string value);
    partial void OnLoginProviderChanged();
    partial void OnProviderKeyChanging(string value);
    partial void OnProviderKeyChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    #endregion
		
		public AspNetUserLogin()
		{
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginProvider", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LoginProvider
		{
			get
			{
				return this._LoginProvider;
			}
			set
			{
				if ((this._LoginProvider != value))
				{
					this.OnLoginProviderChanging(value);
					this.SendPropertyChanging();
					this._LoginProvider = value;
					this.SendPropertyChanged("LoginProvider");
					this.OnLoginProviderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderKey", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProviderKey
		{
			get
			{
				return this._ProviderKey;
			}
			set
			{
				if ((this._ProviderKey != value))
				{
					this.OnProviderKeyChanging(value);
					this.SendPropertyChanging();
					this._ProviderKey = value;
					this.SendPropertyChanged("ProviderKey");
					this.OnProviderKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserLogins.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserLogins.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUserRoles")]
	public partial class AspNetUserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _RoleId;
		
		private EntityRef<AspNetRole> _AspNetRole;
		
		private EntityRef<AspNetUser> _AspNetUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(string value);
    partial void OnRoleIdChanged();
    #endregion
		
		public AspNetUserRole()
		{
			this._AspNetRole = default(EntityRef<AspNetRole>);
			this._AspNetUser = default(EntityRef<AspNetUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._AspNetUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._AspNetRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetRole_AspNetUserRole", Storage="_AspNetRole", ThisKey="RoleId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetRole AspNetRole
		{
			get
			{
				return this._AspNetRole.Entity;
			}
			set
			{
				AspNetRole previousValue = this._AspNetRole.Entity;
				if (((previousValue != value) 
							|| (this._AspNetRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetRole.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetRole.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._RoleId = value.Id;
					}
					else
					{
						this._RoleId = default(string);
					}
					this.SendPropertyChanged("AspNetRole");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUser", ThisKey="UserId", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AspNetUser AspNetUser
		{
			get
			{
				return this._AspNetUser.Entity;
			}
			set
			{
				AspNetUser previousValue = this._AspNetUser.Entity;
				if (((previousValue != value) 
							|| (this._AspNetUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspNetUser.Entity = null;
						previousValue.AspNetUserRoles.Remove(this);
					}
					this._AspNetUser.Entity = value;
					if ((value != null))
					{
						value.AspNetUserRoles.Add(this);
						this._UserId = value.Id;
					}
					else
					{
						this._UserId = default(string);
					}
					this.SendPropertyChanged("AspNetUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspNetUsers")]
	public partial class AspNetUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private string _FName;
		
		private string _MI;
		
		private string _LName;
		
		private string _Address;
		
		private string _City;
		
		private string _States;
		
		private string _Zipcode;
		
		private string _Phone;
		
		private string _CreditCard1;
		
		private string _CreditCard1Type;
		
		private string _CreditCard2;
		
		private string _CreditCard2Type;
		
		private string _CreditCard3;
		
		private string _CreditCard3Type;
		
		private string _Email;
		
		private bool _EmailConfirmed;
		
		private string _PasswordHash;
		
		private string _SecurityStamp;
		
		private string _PhoneNumber;
		
		private bool _PhoneNumberConfirmed;
		
		private bool _TwoFactorEnabled;
		
		private System.Nullable<System.DateTime> _LockoutEndDateUtc;
		
		private bool _LockoutEnabled;
		
		private int _AccessFailedCount;
		
		private string _UserName;
		
		private EntitySet<AspNetUserClaim> _AspNetUserClaims;
		
		private EntitySet<AspNetUserLogin> _AspNetUserLogins;
		
		private EntitySet<AspNetUserRole> _AspNetUserRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnMIChanging(string value);
    partial void OnMIChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStatesChanging(string value);
    partial void OnStatesChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCreditCard1Changing(string value);
    partial void OnCreditCard1Changed();
    partial void OnCreditCard1TypeChanging(string value);
    partial void OnCreditCard1TypeChanged();
    partial void OnCreditCard2Changing(string value);
    partial void OnCreditCard2Changed();
    partial void OnCreditCard2TypeChanging(string value);
    partial void OnCreditCard2TypeChanged();
    partial void OnCreditCard3Changing(string value);
    partial void OnCreditCard3Changed();
    partial void OnCreditCard3TypeChanging(string value);
    partial void OnCreditCard3TypeChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnEmailConfirmedChanging(bool value);
    partial void OnEmailConfirmedChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnSecurityStampChanging(string value);
    partial void OnSecurityStampChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneNumberConfirmedChanging(bool value);
    partial void OnPhoneNumberConfirmedChanged();
    partial void OnTwoFactorEnabledChanging(bool value);
    partial void OnTwoFactorEnabledChanged();
    partial void OnLockoutEndDateUtcChanging(System.Nullable<System.DateTime> value);
    partial void OnLockoutEndDateUtcChanged();
    partial void OnLockoutEnabledChanging(bool value);
    partial void OnLockoutEnabledChanged();
    partial void OnAccessFailedCountChanging(int value);
    partial void OnAccessFailedCountChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    #endregion
		
		public AspNetUser()
		{
			this._AspNetUserClaims = new EntitySet<AspNetUserClaim>(new Action<AspNetUserClaim>(this.attach_AspNetUserClaims), new Action<AspNetUserClaim>(this.detach_AspNetUserClaims));
			this._AspNetUserLogins = new EntitySet<AspNetUserLogin>(new Action<AspNetUserLogin>(this.attach_AspNetUserLogins), new Action<AspNetUserLogin>(this.detach_AspNetUserLogins));
			this._AspNetUserRoles = new EntitySet<AspNetUserRole>(new Action<AspNetUserRole>(this.attach_AspNetUserRoles), new Action<AspNetUserRole>(this.detach_AspNetUserRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(MAX)")]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MI", DbType="NVarChar(MAX)")]
		public string MI
		{
			get
			{
				return this._MI;
			}
			set
			{
				if ((this._MI != value))
				{
					this.OnMIChanging(value);
					this.SendPropertyChanging();
					this._MI = value;
					this.SendPropertyChanged("MI");
					this.OnMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(MAX)")]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(MAX)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_States", DbType="NVarChar(MAX)")]
		public string States
		{
			get
			{
				return this._States;
			}
			set
			{
				if ((this._States != value))
				{
					this.OnStatesChanging(value);
					this.SendPropertyChanging();
					this._States = value;
					this.SendPropertyChanged("States");
					this.OnStatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(MAX)")]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(MAX)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard1", DbType="NVarChar(MAX)")]
		public string CreditCard1
		{
			get
			{
				return this._CreditCard1;
			}
			set
			{
				if ((this._CreditCard1 != value))
				{
					this.OnCreditCard1Changing(value);
					this.SendPropertyChanging();
					this._CreditCard1 = value;
					this.SendPropertyChanged("CreditCard1");
					this.OnCreditCard1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard1Type", DbType="NVarChar(MAX)")]
		public string CreditCard1Type
		{
			get
			{
				return this._CreditCard1Type;
			}
			set
			{
				if ((this._CreditCard1Type != value))
				{
					this.OnCreditCard1TypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCard1Type = value;
					this.SendPropertyChanged("CreditCard1Type");
					this.OnCreditCard1TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard2", DbType="NVarChar(MAX)")]
		public string CreditCard2
		{
			get
			{
				return this._CreditCard2;
			}
			set
			{
				if ((this._CreditCard2 != value))
				{
					this.OnCreditCard2Changing(value);
					this.SendPropertyChanging();
					this._CreditCard2 = value;
					this.SendPropertyChanged("CreditCard2");
					this.OnCreditCard2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard2Type", DbType="NVarChar(MAX)")]
		public string CreditCard2Type
		{
			get
			{
				return this._CreditCard2Type;
			}
			set
			{
				if ((this._CreditCard2Type != value))
				{
					this.OnCreditCard2TypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCard2Type = value;
					this.SendPropertyChanged("CreditCard2Type");
					this.OnCreditCard2TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard3", DbType="NVarChar(MAX)")]
		public string CreditCard3
		{
			get
			{
				return this._CreditCard3;
			}
			set
			{
				if ((this._CreditCard3 != value))
				{
					this.OnCreditCard3Changing(value);
					this.SendPropertyChanging();
					this._CreditCard3 = value;
					this.SendPropertyChanged("CreditCard3");
					this.OnCreditCard3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard3Type", DbType="NVarChar(MAX)")]
		public string CreditCard3Type
		{
			get
			{
				return this._CreditCard3Type;
			}
			set
			{
				if ((this._CreditCard3Type != value))
				{
					this.OnCreditCard3TypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCard3Type = value;
					this.SendPropertyChanged("CreditCard3Type");
					this.OnCreditCard3TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailConfirmed", DbType="Bit NOT NULL")]
		public bool EmailConfirmed
		{
			get
			{
				return this._EmailConfirmed;
			}
			set
			{
				if ((this._EmailConfirmed != value))
				{
					this.OnEmailConfirmedChanging(value);
					this.SendPropertyChanging();
					this._EmailConfirmed = value;
					this.SendPropertyChanged("EmailConfirmed");
					this.OnEmailConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(MAX)")]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecurityStamp", DbType="NVarChar(MAX)")]
		public string SecurityStamp
		{
			get
			{
				return this._SecurityStamp;
			}
			set
			{
				if ((this._SecurityStamp != value))
				{
					this.OnSecurityStampChanging(value);
					this.SendPropertyChanging();
					this._SecurityStamp = value;
					this.SendPropertyChanged("SecurityStamp");
					this.OnSecurityStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(MAX)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumberConfirmed", DbType="Bit NOT NULL")]
		public bool PhoneNumberConfirmed
		{
			get
			{
				return this._PhoneNumberConfirmed;
			}
			set
			{
				if ((this._PhoneNumberConfirmed != value))
				{
					this.OnPhoneNumberConfirmedChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumberConfirmed = value;
					this.SendPropertyChanged("PhoneNumberConfirmed");
					this.OnPhoneNumberConfirmedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TwoFactorEnabled", DbType="Bit NOT NULL")]
		public bool TwoFactorEnabled
		{
			get
			{
				return this._TwoFactorEnabled;
			}
			set
			{
				if ((this._TwoFactorEnabled != value))
				{
					this.OnTwoFactorEnabledChanging(value);
					this.SendPropertyChanging();
					this._TwoFactorEnabled = value;
					this.SendPropertyChanged("TwoFactorEnabled");
					this.OnTwoFactorEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEndDateUtc", DbType="DateTime")]
		public System.Nullable<System.DateTime> LockoutEndDateUtc
		{
			get
			{
				return this._LockoutEndDateUtc;
			}
			set
			{
				if ((this._LockoutEndDateUtc != value))
				{
					this.OnLockoutEndDateUtcChanging(value);
					this.SendPropertyChanging();
					this._LockoutEndDateUtc = value;
					this.SendPropertyChanged("LockoutEndDateUtc");
					this.OnLockoutEndDateUtcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockoutEnabled", DbType="Bit NOT NULL")]
		public bool LockoutEnabled
		{
			get
			{
				return this._LockoutEnabled;
			}
			set
			{
				if ((this._LockoutEnabled != value))
				{
					this.OnLockoutEnabledChanging(value);
					this.SendPropertyChanging();
					this._LockoutEnabled = value;
					this.SendPropertyChanged("LockoutEnabled");
					this.OnLockoutEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccessFailedCount", DbType="Int NOT NULL")]
		public int AccessFailedCount
		{
			get
			{
				return this._AccessFailedCount;
			}
			set
			{
				if ((this._AccessFailedCount != value))
				{
					this.OnAccessFailedCountChanging(value);
					this.SendPropertyChanging();
					this._AccessFailedCount = value;
					this.SendPropertyChanged("AccessFailedCount");
					this.OnAccessFailedCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserClaim", Storage="_AspNetUserClaims", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserClaim> AspNetUserClaims
		{
			get
			{
				return this._AspNetUserClaims;
			}
			set
			{
				this._AspNetUserClaims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserLogin", Storage="_AspNetUserLogins", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserLogin> AspNetUserLogins
		{
			get
			{
				return this._AspNetUserLogins;
			}
			set
			{
				this._AspNetUserLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspNetUser_AspNetUserRole", Storage="_AspNetUserRoles", ThisKey="Id", OtherKey="UserId")]
		public EntitySet<AspNetUserRole> AspNetUserRoles
		{
			get
			{
				return this._AspNetUserRoles;
			}
			set
			{
				this._AspNetUserRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserClaims(AspNetUserClaim entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserLogins(AspNetUserLogin entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
		
		private void attach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = this;
		}
		
		private void detach_AspNetUserRoles(AspNetUserRole entity)
		{
			this.SendPropertyChanging();
			entity.AspNetUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Books : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AuthorFirst;
		
		private string _AuthorLast;
		
		private string _Title;
		
		private decimal _Price;
		
		private System.DateTime _PublicationDate;
		
		private decimal _PriceLastPaid;
		
		private int _Inventory;
		
		private int _ReorderPoint;
		
		private string _Reviews;
		
		private decimal _Ratings;
		
		private string _Genre;
		
		private int _BooksID;
		
		private string _Promotions_PromotionsID;
		
		private string _UniqueNumber;
		
		private EntitySet<Cart> _Carts;
		
		private EntitySet<Employees> _Employees;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
		private EntityRef<Promotion> _Promotion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuthorFirstChanging(string value);
    partial void OnAuthorFirstChanged();
    partial void OnAuthorLastChanging(string value);
    partial void OnAuthorLastChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnPublicationDateChanging(System.DateTime value);
    partial void OnPublicationDateChanged();
    partial void OnPriceLastPaidChanging(decimal value);
    partial void OnPriceLastPaidChanged();
    partial void OnInventoryChanging(int value);
    partial void OnInventoryChanged();
    partial void OnReorderPointChanging(int value);
    partial void OnReorderPointChanged();
    partial void OnReviewsChanging(string value);
    partial void OnReviewsChanged();
    partial void OnRatingsChanging(decimal value);
    partial void OnRatingsChanged();
    partial void OnGenreChanging(string value);
    partial void OnGenreChanged();
    partial void OnBooksIDChanging(int value);
    partial void OnBooksIDChanged();
    partial void OnPromotions_PromotionsIDChanging(string value);
    partial void OnPromotions_PromotionsIDChanged();
    partial void OnUniqueNumberChanging(string value);
    partial void OnUniqueNumberChanged();
    #endregion
		
		public Books()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Employees = new EntitySet<Employees>(new Action<Employees>(this.attach_Employees), new Action<Employees>(this.detach_Employees));
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			this._Promotion = default(EntityRef<Promotion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorFirst", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AuthorFirst
		{
			get
			{
				return this._AuthorFirst;
			}
			set
			{
				if ((this._AuthorFirst != value))
				{
					this.OnAuthorFirstChanging(value);
					this.SendPropertyChanging();
					this._AuthorFirst = value;
					this.SendPropertyChanged("AuthorFirst");
					this.OnAuthorFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorLast", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string AuthorLast
		{
			get
			{
				return this._AuthorLast;
			}
			set
			{
				if ((this._AuthorLast != value))
				{
					this.OnAuthorLastChanging(value);
					this.SendPropertyChanging();
					this._AuthorLast = value;
					this.SendPropertyChanged("AuthorLast");
					this.OnAuthorLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationDate", DbType="DateTime NOT NULL")]
		public System.DateTime PublicationDate
		{
			get
			{
				return this._PublicationDate;
			}
			set
			{
				if ((this._PublicationDate != value))
				{
					this.OnPublicationDateChanging(value);
					this.SendPropertyChanging();
					this._PublicationDate = value;
					this.SendPropertyChanged("PublicationDate");
					this.OnPublicationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceLastPaid", DbType="Decimal(18,2) NOT NULL")]
		public decimal PriceLastPaid
		{
			get
			{
				return this._PriceLastPaid;
			}
			set
			{
				if ((this._PriceLastPaid != value))
				{
					this.OnPriceLastPaidChanging(value);
					this.SendPropertyChanging();
					this._PriceLastPaid = value;
					this.SendPropertyChanged("PriceLastPaid");
					this.OnPriceLastPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Int NOT NULL")]
		public int Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this.OnInventoryChanging(value);
					this.SendPropertyChanging();
					this._Inventory = value;
					this.SendPropertyChanged("Inventory");
					this.OnInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReorderPoint", DbType="Int NOT NULL")]
		public int ReorderPoint
		{
			get
			{
				return this._ReorderPoint;
			}
			set
			{
				if ((this._ReorderPoint != value))
				{
					this.OnReorderPointChanging(value);
					this.SendPropertyChanging();
					this._ReorderPoint = value;
					this.SendPropertyChanged("ReorderPoint");
					this.OnReorderPointChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reviews", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Reviews
		{
			get
			{
				return this._Reviews;
			}
			set
			{
				if ((this._Reviews != value))
				{
					this.OnReviewsChanging(value);
					this.SendPropertyChanging();
					this._Reviews = value;
					this.SendPropertyChanged("Reviews");
					this.OnReviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ratings", DbType="Decimal(18,2) NOT NULL")]
		public decimal Ratings
		{
			get
			{
				return this._Ratings;
			}
			set
			{
				if ((this._Ratings != value))
				{
					this.OnRatingsChanging(value);
					this.SendPropertyChanging();
					this._Ratings = value;
					this.SendPropertyChanged("Ratings");
					this.OnRatingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this.OnGenreChanging(value);
					this.SendPropertyChanging();
					this._Genre = value;
					this.SendPropertyChanged("Genre");
					this.OnGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BooksID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BooksID
		{
			get
			{
				return this._BooksID;
			}
			set
			{
				if ((this._BooksID != value))
				{
					this.OnBooksIDChanging(value);
					this.SendPropertyChanging();
					this._BooksID = value;
					this.SendPropertyChanged("BooksID");
					this.OnBooksIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Promotions_PromotionsID", DbType="NVarChar(128)")]
		public string Promotions_PromotionsID
		{
			get
			{
				return this._Promotions_PromotionsID;
			}
			set
			{
				if ((this._Promotions_PromotionsID != value))
				{
					if (this._Promotion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPromotions_PromotionsIDChanging(value);
					this.SendPropertyChanging();
					this._Promotions_PromotionsID = value;
					this.SendPropertyChanged("Promotions_PromotionsID");
					this.OnPromotions_PromotionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueNumber", DbType="NVarChar(MAX)")]
		public string UniqueNumber
		{
			get
			{
				return this._UniqueNumber;
			}
			set
			{
				if ((this._UniqueNumber != value))
				{
					this.OnUniqueNumberChanging(value);
					this.SendPropertyChanging();
					this._UniqueNumber = value;
					this.SendPropertyChanged("UniqueNumber");
					this.OnUniqueNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Cart", Storage="_Carts", ThisKey="BooksID", OtherKey="BooksID")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Employees", Storage="_Employees", ThisKey="BooksID", OtherKey="Books_BooksID")]
		public EntitySet<Employees> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_OrderDetail", Storage="_OrderDetails", ThisKey="BooksID", OtherKey="BooksID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_Books", Storage="_Promotion", ThisKey="Promotions_PromotionsID", OtherKey="PromotionsID", IsForeignKey=true)]
		public Promotion Promotion
		{
			get
			{
				return this._Promotion.Entity;
			}
			set
			{
				Promotion previousValue = this._Promotion.Entity;
				if (((previousValue != value) 
							|| (this._Promotion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Promotion.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Promotion.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._Promotions_PromotionsID = value.PromotionsID;
					}
					else
					{
						this._Promotions_PromotionsID = default(string);
					}
					this.SendPropertyChanged("Promotion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Books = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Books = null;
		}
		
		private void attach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.Books = this;
		}
		
		private void detach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.Books = null;
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Books = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Books = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books$")]
	public partial class Books_
	{
		
		private System.Nullable<double> _UniqueNumber;
		
		private string _Title;
		
		private string _Genre;
		
		private string _AuthorFirst;
		
		private string _AuthorLast;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<System.DateTime> _PublicationDate;
		
		private System.Nullable<double> _PriceLastPaid;
		
		private System.Nullable<double> _Inventory;
		
		private System.Nullable<double> _Reorder_Point;
		
		public Books_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueNumber", DbType="Float")]
		public System.Nullable<double> UniqueNumber
		{
			get
			{
				return this._UniqueNumber;
			}
			set
			{
				if ((this._UniqueNumber != value))
				{
					this._UniqueNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(255)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Genre", DbType="NVarChar(255)")]
		public string Genre
		{
			get
			{
				return this._Genre;
			}
			set
			{
				if ((this._Genre != value))
				{
					this._Genre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorFirst", DbType="NVarChar(255)")]
		public string AuthorFirst
		{
			get
			{
				return this._AuthorFirst;
			}
			set
			{
				if ((this._AuthorFirst != value))
				{
					this._AuthorFirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthorLast", DbType="NVarChar(255)")]
		public string AuthorLast
		{
			get
			{
				return this._AuthorLast;
			}
			set
			{
				if ((this._AuthorLast != value))
				{
					this._AuthorLast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublicationDate
		{
			get
			{
				return this._PublicationDate;
			}
			set
			{
				if ((this._PublicationDate != value))
				{
					this._PublicationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceLastPaid", DbType="Float")]
		public System.Nullable<double> PriceLastPaid
		{
			get
			{
				return this._PriceLastPaid;
			}
			set
			{
				if ((this._PriceLastPaid != value))
				{
					this._PriceLastPaid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Float")]
		public System.Nullable<double> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this._Inventory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Reorder Point]", Storage="_Reorder_Point", DbType="Float")]
		public System.Nullable<double> Reorder_Point
		{
			get
			{
				return this._Reorder_Point;
			}
			set
			{
				if ((this._Reorder_Point != value))
				{
					this._Reorder_Point = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Carts")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecordID;
		
		private int _CartID;
		
		private int _BooksID;
		
		private int _Count;
		
		private EntityRef<Books> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecordIDChanging(int value);
    partial void OnRecordIDChanged();
    partial void OnCartIDChanging(int value);
    partial void OnCartIDChanged();
    partial void OnBooksIDChanging(int value);
    partial void OnBooksIDChanged();
    partial void OnCountChanging(int value);
    partial void OnCountChanged();
    #endregion
		
		public Cart()
		{
			this._Books = default(EntityRef<Books>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartID", DbType="Int NOT NULL")]
		public int CartID
		{
			get
			{
				return this._CartID;
			}
			set
			{
				if ((this._CartID != value))
				{
					this.OnCartIDChanging(value);
					this.SendPropertyChanging();
					this._CartID = value;
					this.SendPropertyChanged("CartID");
					this.OnCartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BooksID", DbType="Int NOT NULL")]
		public int BooksID
		{
			get
			{
				return this._BooksID;
			}
			set
			{
				if ((this._BooksID != value))
				{
					if (this._Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBooksIDChanging(value);
					this.SendPropertyChanging();
					this._BooksID = value;
					this.SendPropertyChanged("BooksID");
					this.OnBooksIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Count", DbType="Int NOT NULL")]
		public int Count
		{
			get
			{
				return this._Count;
			}
			set
			{
				if ((this._Count != value))
				{
					this.OnCountChanging(value);
					this.SendPropertyChanging();
					this._Count = value;
					this.SendPropertyChanged("Count");
					this.OnCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Cart", Storage="_Books", ThisKey="BooksID", OtherKey="BooksID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Books Books
		{
			get
			{
				return this._Books.Entity;
			}
			set
			{
				Books previousValue = this._Books.Entity;
				if (((previousValue != value) 
							|| (this._Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Books.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Books.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._BooksID = value.BooksID;
					}
					else
					{
						this._BooksID = default(int);
					}
					this.SendPropertyChanged("Books");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomersID;
		
		private string _FName;
		
		private string _MI;
		
		private string _LName;
		
		private string _Email;
		
		private string _Password;
		
		private string _Address;
		
		private string _Zipcode;
		
		private string _CreditCard1;
		
		private string _CreditCard1Type;
		
		private string _CreditCard2;
		
		private string _CreditCard2Type;
		
		private string _CreditCard3;
		
		private string _CreditCard3Type;
		
		private string _Phone;
		
		private System.Nullable<int> _Orders_OrdersID;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomersIDChanging(int value);
    partial void OnCustomersIDChanged();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnMIChanging(string value);
    partial void OnMIChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnCreditCard1Changing(string value);
    partial void OnCreditCard1Changed();
    partial void OnCreditCard1TypeChanging(string value);
    partial void OnCreditCard1TypeChanged();
    partial void OnCreditCard2Changing(string value);
    partial void OnCreditCard2Changed();
    partial void OnCreditCard2TypeChanging(string value);
    partial void OnCreditCard2TypeChanged();
    partial void OnCreditCard3Changing(string value);
    partial void OnCreditCard3Changed();
    partial void OnCreditCard3TypeChanging(string value);
    partial void OnCreditCard3TypeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnOrders_OrdersIDChanging(System.Nullable<int> value);
    partial void OnOrders_OrdersIDChanged();
    #endregion
		
		public Customers()
		{
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomersID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomersID
		{
			get
			{
				return this._CustomersID;
			}
			set
			{
				if ((this._CustomersID != value))
				{
					this.OnCustomersIDChanging(value);
					this.SendPropertyChanging();
					this._CustomersID = value;
					this.SendPropertyChanged("CustomersID");
					this.OnCustomersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MI", DbType="NVarChar(MAX)")]
		public string MI
		{
			get
			{
				return this._MI;
			}
			set
			{
				if ((this._MI != value))
				{
					this.OnMIChanging(value);
					this.SendPropertyChanging();
					this._MI = value;
					this.SendPropertyChanged("MI");
					this.OnMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard1", DbType="NVarChar(MAX)")]
		public string CreditCard1
		{
			get
			{
				return this._CreditCard1;
			}
			set
			{
				if ((this._CreditCard1 != value))
				{
					this.OnCreditCard1Changing(value);
					this.SendPropertyChanging();
					this._CreditCard1 = value;
					this.SendPropertyChanged("CreditCard1");
					this.OnCreditCard1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard1Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CreditCard1Type
		{
			get
			{
				return this._CreditCard1Type;
			}
			set
			{
				if ((this._CreditCard1Type != value))
				{
					this.OnCreditCard1TypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCard1Type = value;
					this.SendPropertyChanged("CreditCard1Type");
					this.OnCreditCard1TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard2", DbType="NVarChar(MAX)")]
		public string CreditCard2
		{
			get
			{
				return this._CreditCard2;
			}
			set
			{
				if ((this._CreditCard2 != value))
				{
					this.OnCreditCard2Changing(value);
					this.SendPropertyChanging();
					this._CreditCard2 = value;
					this.SendPropertyChanged("CreditCard2");
					this.OnCreditCard2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard2Type", DbType="NVarChar(MAX)")]
		public string CreditCard2Type
		{
			get
			{
				return this._CreditCard2Type;
			}
			set
			{
				if ((this._CreditCard2Type != value))
				{
					this.OnCreditCard2TypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCard2Type = value;
					this.SendPropertyChanged("CreditCard2Type");
					this.OnCreditCard2TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard3", DbType="NVarChar(MAX)")]
		public string CreditCard3
		{
			get
			{
				return this._CreditCard3;
			}
			set
			{
				if ((this._CreditCard3 != value))
				{
					this.OnCreditCard3Changing(value);
					this.SendPropertyChanging();
					this._CreditCard3 = value;
					this.SendPropertyChanged("CreditCard3");
					this.OnCreditCard3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard3Type", DbType="NVarChar(MAX)")]
		public string CreditCard3Type
		{
			get
			{
				return this._CreditCard3Type;
			}
			set
			{
				if ((this._CreditCard3Type != value))
				{
					this.OnCreditCard3TypeChanging(value);
					this.SendPropertyChanging();
					this._CreditCard3Type = value;
					this.SendPropertyChanged("CreditCard3Type");
					this.OnCreditCard3TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orders_OrdersID", DbType="Int")]
		public System.Nullable<int> Orders_OrdersID
		{
			get
			{
				return this._Orders_OrdersID;
			}
			set
			{
				if ((this._Orders_OrdersID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrders_OrdersIDChanging(value);
					this.SendPropertyChanging();
					this._Orders_OrdersID = value;
					this.SendPropertyChanged("Orders_OrdersID");
					this.OnOrders_OrdersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Customers", Storage="_Order", ThisKey="Orders_OrdersID", OtherKey="OrdersID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._Orders_OrdersID = value.OrdersID;
					}
					else
					{
						this._Orders_OrdersID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers$")]
	public partial class Customers_
	{
		
		private string _EmailAddr;
		
		private string _Password;
		
		private string _LastName;
		
		private string _FirstName;
		
		private string _MI;
		
		private string _Address;
		
		private System.Nullable<double> _ZipCode;
		
		private System.Nullable<double> _Phone;
		
		private string _Credit_Card__1_Number;
		
		private string _Credit_Card__1_Number1;
		
		private string _Credit_Card__2_Number;
		
		private string _Credit_Card__2_Number1;
		
		public Customers_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddr", DbType="NVarChar(255)")]
		public string EmailAddr
		{
			get
			{
				return this._EmailAddr;
			}
			set
			{
				if ((this._EmailAddr != value))
				{
					this._EmailAddr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MI", DbType="NVarChar(255)")]
		public string MI
		{
			get
			{
				return this._MI;
			}
			set
			{
				if ((this._MI != value))
				{
					this._MI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="Float")]
		public System.Nullable<double> ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Float")]
		public System.Nullable<double> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Credit Card #1 Number]", Storage="_Credit_Card__1_Number", DbType="NVarChar(255)")]
		public string Credit_Card__1_Number
		{
			get
			{
				return this._Credit_Card__1_Number;
			}
			set
			{
				if ((this._Credit_Card__1_Number != value))
				{
					this._Credit_Card__1_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Credit Card #1 Number1]", Storage="_Credit_Card__1_Number1", DbType="NVarChar(255)")]
		public string Credit_Card__1_Number1
		{
			get
			{
				return this._Credit_Card__1_Number1;
			}
			set
			{
				if ((this._Credit_Card__1_Number1 != value))
				{
					this._Credit_Card__1_Number1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Credit Card #2 Number]", Storage="_Credit_Card__2_Number", DbType="NVarChar(255)")]
		public string Credit_Card__2_Number
		{
			get
			{
				return this._Credit_Card__2_Number;
			}
			set
			{
				if ((this._Credit_Card__2_Number != value))
				{
					this._Credit_Card__2_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Credit Card #2 Number1]", Storage="_Credit_Card__2_Number1", DbType="NVarChar(255)")]
		public string Credit_Card__2_Number1
		{
			get
			{
				return this._Credit_Card__2_Number1;
			}
			set
			{
				if ((this._Credit_Card__2_Number1 != value))
				{
					this._Credit_Card__2_Number1 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FName;
		
		private string _MI;
		
		private string _LName;
		
		private string _Email;
		
		private string _Password;
		
		private string _Address;
		
		private string _Zipcode;
		
		private int _EmployeesID;
		
		private string _EmpNumber;
		
		private string _Phone;
		
		private int _EmployeeTypes;
		
		private System.Nullable<int> _Books_BooksID;
		
		private EntityRef<Books> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFNameChanging(string value);
    partial void OnFNameChanged();
    partial void OnMIChanging(string value);
    partial void OnMIChanged();
    partial void OnLNameChanging(string value);
    partial void OnLNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnZipcodeChanging(string value);
    partial void OnZipcodeChanged();
    partial void OnEmployeesIDChanging(int value);
    partial void OnEmployeesIDChanged();
    partial void OnEmpNumberChanging(string value);
    partial void OnEmpNumberChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmployeeTypesChanging(int value);
    partial void OnEmployeeTypesChanged();
    partial void OnBooks_BooksIDChanging(System.Nullable<int> value);
    partial void OnBooks_BooksIDChanged();
    #endregion
		
		public Employees()
		{
			this._Books = default(EntityRef<Books>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FName
		{
			get
			{
				return this._FName;
			}
			set
			{
				if ((this._FName != value))
				{
					this.OnFNameChanging(value);
					this.SendPropertyChanging();
					this._FName = value;
					this.SendPropertyChanged("FName");
					this.OnFNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MI", DbType="NVarChar(MAX)")]
		public string MI
		{
			get
			{
				return this._MI;
			}
			set
			{
				if ((this._MI != value))
				{
					this.OnMIChanging(value);
					this.SendPropertyChanging();
					this._MI = value;
					this.SendPropertyChanged("MI");
					this.OnMIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LName
		{
			get
			{
				return this._LName;
			}
			set
			{
				if ((this._LName != value))
				{
					this.OnLNameChanging(value);
					this.SendPropertyChanging();
					this._LName = value;
					this.SendPropertyChanged("LName");
					this.OnLNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zipcode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Zipcode
		{
			get
			{
				return this._Zipcode;
			}
			set
			{
				if ((this._Zipcode != value))
				{
					this.OnZipcodeChanging(value);
					this.SendPropertyChanging();
					this._Zipcode = value;
					this.SendPropertyChanged("Zipcode");
					this.OnZipcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeesID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int EmployeesID
		{
			get
			{
				return this._EmployeesID;
			}
			set
			{
				if ((this._EmployeesID != value))
				{
					this.OnEmployeesIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeesID = value;
					this.SendPropertyChanged("EmployeesID");
					this.OnEmployeesIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpNumber", DbType="NVarChar(MAX)")]
		public string EmpNumber
		{
			get
			{
				return this._EmpNumber;
			}
			set
			{
				if ((this._EmpNumber != value))
				{
					this.OnEmpNumberChanging(value);
					this.SendPropertyChanging();
					this._EmpNumber = value;
					this.SendPropertyChanged("EmpNumber");
					this.OnEmpNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypes", DbType="Int NOT NULL")]
		public int EmployeeTypes
		{
			get
			{
				return this._EmployeeTypes;
			}
			set
			{
				if ((this._EmployeeTypes != value))
				{
					this.OnEmployeeTypesChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypes = value;
					this.SendPropertyChanged("EmployeeTypes");
					this.OnEmployeeTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Books_BooksID", DbType="Int")]
		public System.Nullable<int> Books_BooksID
		{
			get
			{
				return this._Books_BooksID;
			}
			set
			{
				if ((this._Books_BooksID != value))
				{
					if (this._Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBooks_BooksIDChanging(value);
					this.SendPropertyChanging();
					this._Books_BooksID = value;
					this.SendPropertyChanged("Books_BooksID");
					this.OnBooks_BooksIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_Employees", Storage="_Books", ThisKey="Books_BooksID", OtherKey="BooksID", IsForeignKey=true)]
		public Books Books
		{
			get
			{
				return this._Books.Entity;
			}
			set
			{
				Books previousValue = this._Books.Entity;
				if (((previousValue != value) 
							|| (this._Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Books.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Books.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._Books_BooksID = value.BooksID;
					}
					else
					{
						this._Books_BooksID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Books");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees$")]
	public partial class Employees_
	{
		
		private System.Nullable<double> _EmpID;
		
		private string _Email;
		
		private string _FirstName;
		
		private string _MI;
		
		private string _LastName;
		
		private string _Password;
		
		private string _Address;
		
		private string _ZipCode;
		
		private System.Nullable<double> _Phone;
		
		private string _Employee_Type;
		
		public Employees_()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpID", DbType="Float")]
		public System.Nullable<double> EmpID
		{
			get
			{
				return this._EmpID;
			}
			set
			{
				if ((this._EmpID != value))
				{
					this._EmpID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(255)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MI", DbType="NVarChar(255)")]
		public string MI
		{
			get
			{
				return this._MI;
			}
			set
			{
				if ((this._MI != value))
				{
					this._MI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(255)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="NVarChar(255)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this._ZipCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="Float")]
		public System.Nullable<double> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Employee Type]", Storage="_Employee_Type", DbType="NVarChar(255)")]
		public string Employee_Type
		{
			get
			{
				return this._Employee_Type;
			}
			set
			{
				if ((this._Employee_Type != value))
				{
					this._Employee_Type = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderDetails")]
	public partial class OrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderDetailId;
		
		private int _OrderID;
		
		private int _BooksID;
		
		private int _Quantity;
		
		private decimal _UnitPrice;
		
		private System.Nullable<int> _Order_OrdersID;
		
		private EntityRef<Books> _Books;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderDetailIdChanging(int value);
    partial void OnOrderDetailIdChanged();
    partial void OnOrderIDChanging(int value);
    partial void OnOrderIDChanged();
    partial void OnBooksIDChanging(int value);
    partial void OnBooksIDChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnUnitPriceChanging(decimal value);
    partial void OnUnitPriceChanged();
    partial void OnOrder_OrdersIDChanging(System.Nullable<int> value);
    partial void OnOrder_OrdersIDChanged();
    #endregion
		
		public OrderDetail()
		{
			this._Books = default(EntityRef<Books>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderDetailId
		{
			get
			{
				return this._OrderDetailId;
			}
			set
			{
				if ((this._OrderDetailId != value))
				{
					this.OnOrderDetailIdChanging(value);
					this.SendPropertyChanging();
					this._OrderDetailId = value;
					this.SendPropertyChanged("OrderDetailId");
					this.OnOrderDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="Int NOT NULL")]
		public int OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BooksID", DbType="Int NOT NULL")]
		public int BooksID
		{
			get
			{
				return this._BooksID;
			}
			set
			{
				if ((this._BooksID != value))
				{
					if (this._Books.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBooksIDChanging(value);
					this.SendPropertyChanging();
					this._BooksID = value;
					this.SendPropertyChanged("BooksID");
					this.OnBooksIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitPrice", DbType="Decimal(18,2) NOT NULL")]
		public decimal UnitPrice
		{
			get
			{
				return this._UnitPrice;
			}
			set
			{
				if ((this._UnitPrice != value))
				{
					this.OnUnitPriceChanging(value);
					this.SendPropertyChanging();
					this._UnitPrice = value;
					this.SendPropertyChanged("UnitPrice");
					this.OnUnitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Order_OrdersID", DbType="Int")]
		public System.Nullable<int> Order_OrdersID
		{
			get
			{
				return this._Order_OrdersID;
			}
			set
			{
				if ((this._Order_OrdersID != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrder_OrdersIDChanging(value);
					this.SendPropertyChanging();
					this._Order_OrdersID = value;
					this.SendPropertyChanged("Order_OrdersID");
					this.OnOrder_OrdersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Books_OrderDetail", Storage="_Books", ThisKey="BooksID", OtherKey="BooksID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Books Books
		{
			get
			{
				return this._Books.Entity;
			}
			set
			{
				Books previousValue = this._Books.Entity;
				if (((previousValue != value) 
							|| (this._Books.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Books.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Books.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._BooksID = value.BooksID;
					}
					else
					{
						this._BooksID = default(int);
					}
					this.SendPropertyChanged("Books");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_Order", ThisKey="Order_OrdersID", OtherKey="OrdersID", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.OrderDetails.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.OrderDetails.Add(this);
						this._Order_OrdersID = value.OrdersID;
					}
					else
					{
						this._Order_OrdersID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrdersID;
		
		private string _UniqueNumber;
		
		private decimal _Total;
		
		private System.DateTime _OrderDate;
		
		private EntitySet<Customers> _Customers;
		
		private EntitySet<OrderDetail> _OrderDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdersIDChanging(int value);
    partial void OnOrdersIDChanged();
    partial void OnUniqueNumberChanging(string value);
    partial void OnUniqueNumberChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    partial void OnOrderDateChanging(System.DateTime value);
    partial void OnOrderDateChanged();
    #endregion
		
		public Order()
		{
			this._Customers = new EntitySet<Customers>(new Action<Customers>(this.attach_Customers), new Action<Customers>(this.detach_Customers));
			this._OrderDetails = new EntitySet<OrderDetail>(new Action<OrderDetail>(this.attach_OrderDetails), new Action<OrderDetail>(this.detach_OrderDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdersID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrdersID
		{
			get
			{
				return this._OrdersID;
			}
			set
			{
				if ((this._OrdersID != value))
				{
					this.OnOrdersIDChanging(value);
					this.SendPropertyChanging();
					this._OrdersID = value;
					this.SendPropertyChanged("OrdersID");
					this.OnOrdersIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueNumber", DbType="NVarChar(MAX)")]
		public string UniqueNumber
		{
			get
			{
				return this._UniqueNumber;
			}
			set
			{
				if ((this._UniqueNumber != value))
				{
					this.OnUniqueNumberChanging(value);
					this.SendPropertyChanging();
					this._UniqueNumber = value;
					this.SendPropertyChanged("UniqueNumber");
					this.OnUniqueNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(18,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderDate", DbType="DateTime NOT NULL")]
		public System.DateTime OrderDate
		{
			get
			{
				return this._OrderDate;
			}
			set
			{
				if ((this._OrderDate != value))
				{
					this.OnOrderDateChanging(value);
					this.SendPropertyChanging();
					this._OrderDate = value;
					this.SendPropertyChanged("OrderDate");
					this.OnOrderDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_Customers", Storage="_Customers", ThisKey="OrdersID", OtherKey="Orders_OrdersID")]
		public EntitySet<Customers> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_OrderDetail", Storage="_OrderDetails", ThisKey="OrdersID", OtherKey="Order_OrdersID")]
		public EntitySet<OrderDetail> OrderDetails
		{
			get
			{
				return this._OrderDetails;
			}
			set
			{
				this._OrderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customers entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_Customers(Customers entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
		
		private void attach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_OrderDetails(OrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Promotions")]
	public partial class Promotion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PromotionsID;
		
		private string _OrderID;
		
		private System.Nullable<int> _CouponTypes;
		
		private EntitySet<Books> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPromotionsIDChanging(string value);
    partial void OnPromotionsIDChanged();
    partial void OnOrderIDChanging(string value);
    partial void OnOrderIDChanged();
    partial void OnCouponTypesChanging(System.Nullable<int> value);
    partial void OnCouponTypesChanged();
    #endregion
		
		public Promotion()
		{
			this._Books = new EntitySet<Books>(new Action<Books>(this.attach_Books), new Action<Books>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionsID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PromotionsID
		{
			get
			{
				return this._PromotionsID;
			}
			set
			{
				if ((this._PromotionsID != value))
				{
					this.OnPromotionsIDChanging(value);
					this.SendPropertyChanging();
					this._PromotionsID = value;
					this.SendPropertyChanged("PromotionsID");
					this.OnPromotionsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderID", DbType="NVarChar(MAX)")]
		public string OrderID
		{
			get
			{
				return this._OrderID;
			}
			set
			{
				if ((this._OrderID != value))
				{
					this.OnOrderIDChanging(value);
					this.SendPropertyChanging();
					this._OrderID = value;
					this.SendPropertyChanged("OrderID");
					this.OnOrderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CouponTypes", DbType="Int")]
		public System.Nullable<int> CouponTypes
		{
			get
			{
				return this._CouponTypes;
			}
			set
			{
				if ((this._CouponTypes != value))
				{
					this.OnCouponTypesChanging(value);
					this.SendPropertyChanging();
					this._CouponTypes = value;
					this.SendPropertyChanged("CouponTypes");
					this.OnCouponTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Promotion_Books", Storage="_Books", ThisKey="PromotionsID", OtherKey="Promotions_PromotionsID")]
		public EntitySet<Books> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Books entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = this;
		}
		
		private void detach_Books(Books entity)
		{
			this.SendPropertyChanging();
			entity.Promotion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingCarts")]
	public partial class ShoppingCart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ShoppingCartID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoppingCartIDChanging(string value);
    partial void OnShoppingCartIDChanged();
    #endregion
		
		public ShoppingCart()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingCartID", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ShoppingCartID
		{
			get
			{
				return this._ShoppingCartID;
			}
			set
			{
				if ((this._ShoppingCartID != value))
				{
					this.OnShoppingCartIDChanging(value);
					this.SendPropertyChanging();
					this._ShoppingCartID = value;
					this.SendPropertyChanged("ShoppingCartID");
					this.OnShoppingCartIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
